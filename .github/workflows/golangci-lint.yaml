name: golangci-lint
on:
  workflow_call:
    inputs:
      # runs_on:
      #   type: string
      #   default: 'ubuntu-latest'
      action_config_repostory:
        type: string
        default: 'estenrye/.github'
      action_config_ref:
        type: string
        default: 'main'
      golang_version:
        type: string
        default: '1.22.x'
      golangci_lint_config_path:
        type: string
        default: '.action-config/.golangci.yaml'
    secrets:
      token:
        description: 'GITHUB_TOKEN'
        required: true

permissions:
  contents: read
  # Optional: allow read access to pull request. Use with `only-new-issues` option.
  # pull-requests: read

jobs:
  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: Pull config from .github repository.
        uses: actions/checkout@v4
        if: inputs.golangci_lint_config_path == '.action-config/.golangci.yaml'
        with:
          ref: ${{ inputs.action_config_ref }}
          path: .action-config
          repository: ${{ inputs.action_config_repostory }}
          token: ${{ secrets.token }}
      - name: Echo .action-config/.golangci.yaml
        run: cat .action-config/.golangci.yaml
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: s
          token: ${{ secrets.token }}
      # - name: Install golang
      #   uses: actions/setup-go@v5
      #   with:
      #     go-version: ${{ inputs.golang_version }}
      #     cache: false
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: v1.56.2
          working-directory: s
          args: --timeout=30m --config=${{github.workspace}}/${{ inputs.golangci_lint_config_path }}
          install-mode: "binary"
          # Optional: show only new issues if it's a pull request. The default value is `false`.
          # only-new-issues: true

          # Optional: if set to true, then all caching functionality will be completely disabled,
          #           takes precedence over all other caching options.
          # skip-cache: true

          # Optional: if set to true, then the action won't cache or restore ~/go/pkg.
          # skip-pkg-cache: true

          # Optional: if set to true, then the action won't cache or restore ~/.cache/go-build.
          # skip-build-cache: true

